---
import Navbar from "./Navbar.astro";
import Footer from "./Footer.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/agency-template/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="Saudi Controls"
    />
    <title>Saudi Controls {title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/style/custom.css" />
    <style>
      body {
        position: relative;
        overflow: hidden;
      }
      video.background-video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        z-index: -1;
      }
    </style>
  </head>
  <body class="overflow-hidden overflow-y-auto bg-body">
    <video class="background-video" autoplay muted loop>
      <source src="/path/to/your/video.mp4" type="video/mp4" />
      Your browser does not support the video tag.
    </video>
    <Navbar />
    <slot />
    <Footer />
  </body>
  <script>
    detectSystemTheme();

    const switchTheme = document.querySelector(
      "[data-switch-theme]"
    ) as HTMLButtonElement;
    switchTheme.addEventListener("click", (e) => {
      e.preventDefault();
      changeThemeManually();
    });

    function changeThemeManually() {
      const localAppTheme = localStorage.getItem("theme");
      // Whenever the user explicitly chooses dark mode, previously it was light mode
      if (localAppTheme === "light") {
        changeThemeToDark();
      }
      // Whenever the user explicitly chooses light mode, previously it was dark mode
      if (localAppTheme === "dark") {
        changeThemeToLight();
      }
      if (!localAppTheme) {
        console.log("previously it was not set");
        // Whenever the user explicitly chooses to respect the OS preference
        detectSystemTheme(true);
      }
    }

    function detectSystemTheme(manual = false) {
      if (
        localStorage.getItem("theme") === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
        if (manual) localStorage.setItem("theme", "dark");
      } else {
        document.documentElement.classList.remove("dark");
        if (manual) localStorage.setItem("theme", "light");
      }
    }

    function changeThemeToDark() {
      localStorage.setItem("theme", "dark");
      document.documentElement.classList.add("dark");
    }

    function changeThemeToLight() {
      localStorage.setItem("theme", "light");
      document.documentElement.classList.remove("dark");
    }
  </script>
  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]"
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]"
    ) as HTMLDivElement;
    if (toggleMenu) {
      toggleMenu.addEventListener("click", (e) => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
          navbar.style.height = `${navbar.scrollHeight}px`;
        } else {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        }
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });
    }
  </script>
</html>
